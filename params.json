{"name":"Git-GitHub","tagline":"","body":"### Welcome to GitHub Pages.\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here using GitHub Flavored Markdown, select a template crafted by a designer, and publish. After your page is generated, you can check out the new branch:\r\n\r\n```\r\n$ cd your_repo_root/repo_name\r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```\r\n\r\n## Getting Started\r\n\r\nTo get started using git we need to:\r\n\r\n```\r\n$ git clone <github.com/SOME-REPO>\r\n```\r\nor\r\n```\r\n$ mkdir <NEW-REPO-NAME> \r\n$ cd <NEW-REPO-NAME>\r\n$ git init \r\n```\r\n\r\n## Clone Existing Repo Using SSH\r\n\r\nTo clone an existing empty repo from github.com using SSH:\r\n\r\nCopy the ssh endpoint\r\n<img src=\"images/git-clone-empty-ssh.png\" style=\"border:none;\">\r\n\r\n\r\n    git clone git@git.target.com:chef-training/git-clone-empty.git\r\n\r\n--\r\n\r\n## Clone Existing Repo Using HTTPS\r\n\r\nYou can also clone repo's from github using https, but you will need to provide your username & password each time you want to commit changes back up to the github remote.\r\n\r\nCopy the https endpoint\r\n<img src=\"images/git-clone-empty-https.png\" style=\"border:none;\">\r\n\r\n\r\n    git clone https://git.target.com/chef-training/git-clone-empty.git\r\n\r\n\r\n--\r\n\r\n## Clone Existing Repo\r\n\r\nTo clone an existing repo from github.com, go to the main project page & find the clone options located on the right side of the screen\r\n\r\n<img src=\"images/git-clone-existing-ssh.png\" style=\"border:none;\">\r\n\r\n--\r\n\r\n## Clone Existing Repo\r\n\r\nCopy the ssh url & type the following command into the terminal\r\n\r\n    git clone git@git.target.com:chef-training/git-clone-existing.git\r\n\r\n--\r\n\r\n## What's happening\r\n\r\nHere's whats happening when we read the log messaages from the terminal\r\n\r\n<img src=\"images/git-clone-existing-terminal.png\" style=\"border: none;\">\r\n\r\nIt should say that it has received 100% of the objects\r\n\r\n--\r\n\r\n## Change directories\r\n\r\nNow that we have successfully cloned this repo to our desktop, we still need to change directories (cd) so that we are in the project.\r\n\r\n<img src=\"images/git-clone-existing-cd.png\" style=\"border:none;\">\r\n\r\n--\r\n\r\n## List all the files\r\n\r\nNow when you type ls into the terminal you should see the README.md file & the index.html file\r\n\r\n<img src=\"images/git-clone-existing-ls.png\" style=\"border:none;\">\r\n\r\nIf you type ls -la to also show hidden files you should see the hidden .git directory as well\r\n\r\n<img src=\"images/git-clone-existing-lsla.png\" style=\"border:none;\">\r\n\r\n--\r\n\r\n## Remote Endpoints\r\n\r\nWhen cloning an existing repo from github, you will already have an origin remote set for you to start making pull requests.\r\n\r\n--\r\n\r\n## Check Existing Remotes\r\n\r\nTo see existing remotes set for any git repo type the following command:  \r\n\r\n<img src=\"images/git-clone-existing-remote.png\" style=\"border:none;\">\r\n\r\n--\r\n\r\n## Remove a Remote\r\n\r\nTo remove a remote you can type git remote remove REMOTE-NAME, where REMOTE-NAME is the name of the remote you want to remove.  The default remote from a cloned repo will have a name of origin.  \r\n\r\n<img src=\"images/git-clone-existing-remote-remove.png\" style=\"border:none;\">\r\n\r\n--\r\n\r\n## Add a Remote\r\n\r\nTo add a remote you can run the command:\r\n\r\n    git remote add REMOTE-NAME REMOTE-URL,\r\n\r\nwhere REMOTE-NAME is the name of the remote you would like to add & REMOTE-URL is the endpoint that the remote will point to on GitHub.  This could be origin, github, heroku, aws, docker, openstack, etc.\r\n\r\n<img src=\"images/git-clone-existing-remote-add.png\" style=\"border: none;\">\r\n\r\n--\r\n\r\n## Change a Remote\r\n\r\nTo change the URL of an existing remote, run the command:\r\n\r\n    git remote set-url REMOTE-NAME NEW-REMOTE-URL\r\n\r\nREMOTE-NAME - The name of the remote, whose endpoint you want to change\r\nNEW-REMOTE-URL - The new URL you want to assign to this remote\r\n\r\n<br>\r\n\r\n<img src=\"images/git-clone-existing-remote-seturl.png\" style=\"border:none;\">\r\n\r\n\r\n--\r\n\r\n## Setting up a Repository (Locally)\r\n\r\nNow we will go through setting up a new git repository from scratch.\r\n\r\n--\r\n\r\n## Create Empty Directory\r\n\r\nChange directories to your desktop\r\n\r\n<img src=\"images/git-create-local-repo-cd.png\" style=\"border:none;\">\r\n\r\nCD is the command for \"changing directories\"\r\n\r\n--\r\n\r\n## Create a new directory\r\n\r\nCreate a new directory (mkdir) & change (cd) into your directory\r\n<img src=\"images/git-create-local-repo-mkdir.png\" style=\"border:none;\">\r\n\r\n\r\n<small>commands:<br>\r\n<span style=\"background: black; color: lime; padding: 0 5px; text-align: left;\">cd</span> \"change directory\" <br>\r\n<span style=\"background: black; color: lime; padding: 0 5px; text-align: left;\">mkdir</span> - \"make directory\"</small>\r\n\r\n<blockquote><small>New to the command line? <br> Checkout this great <a href=\"http://cli.learncodethehardway.org/book/\">crash course</a> on getting started!</small></blockquote>\r\n\r\nnote: This course goes through the commands for navigating in & out of directories, creating new files, deleting files, etc.\r\n\r\n--\r\n\r\n## Git Init\r\n\r\nNow that we are inside the directory, we can initialize git within this directory using the git init command\r\n\r\n<br>\r\n\r\n<img src=\"images/git-create-local-repo-init.png\" style=\"border:none;\">\r\n\r\n--\r\n\r\n## About git init\r\n\r\nThe git init command adds a hidden \".git\" folder that will track all the file changes, history, etc.  You will not need to make any changes directly to this folder.  \r\n\r\nInstead, git provides you access to different configurations through their command-line tools.\r\n\r\n<br>\r\n<a href=\"../github-git-cheat-sheet.pdf\">git command-line cheat sheet <i class=\"fa fa-file-pdf-o\"></i></a>\r\n\r\n--\r\n\r\nAlthough we don't need to go into the .git folder, we should check to make sure that its there & that git has been properly initialized.\r\n\r\n--\r\n\r\nTo check that you have properly initialized git for this directory, type in the command ls -la:\r\n\r\n<img src=\"images/git-create-local-repo-lsla.png\" style=\"border:none;\">\r\n\r\nIf we only type in ls, we won't be able to see the .git subdirectory since it is hidden from search by default  \r\n\r\n<img src=\"images/git-create-local-repo-ls.png\" style=\"border:none;\">\r\n\r\n\r\n<blockquote><small><code>ls</code> is the command for \"list\" all files.  If we add <strong>-al</strong>, it will \"list\" \"all\" file in the current directory (+ hidden)</small></blockquote>\r\n\r\n\r\n--","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}